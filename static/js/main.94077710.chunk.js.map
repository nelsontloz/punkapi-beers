{"version":3,"sources":["services/Beers.service.ts","redux/reducers/Beers.reducer.ts","components/BeerCard/BeerCard.component.tsx","components/BeerCard/BeerCard.component.redux.tsx","components/BeersList/BeersList.component.tsx","components/loader/Loader.component.tsx","components/PaginationNav/PaginationNav.component.tsx","components/PaginationNav/PaginationNav.component.redux.tsx","routes/home/Home.component.tsx","routes/beer-details/BeerDetails.component.tsx","components/Navbar/Navbar.component.tsx","routes/favorite-beers/FavoriteBeers.component.tsx","App.tsx","serviceWorker.ts","redux/Store.ts","index.tsx"],"names":["getBeers","filters","pagination","ids","length","reduce","prev","curr","formatIds","Axios","get","process","params","initialState","selectedBeer","favoriteBeers","page","beersReducer","state","action","type","id","filter","beerId","BeerCard","props","className","src","image_url","alt","name","to","pathname","linkUrl","search","tagline","icon","isFavorite","faHeart","faHeartReg","size","onClick","onRemomveToFavorite","onAddToFavorite","BeerCardRedux","connect","ownProps","indexOf","dispatch","BeersList","beers","map","beer","index","key","Loader","PaginationNav","role","aria-label","currentPage","onPreviousPage","faChevronLeft","onNextPage","faChevronRight","PaginationNavRedux","useState","setBeers","isLoading","setIsLoading","useEffect","subscription","per_page","subscribe","response","data","unsubscribe","withRouter","setBeer","URLSearchParams","useLocation","history","goBack","faArrowAltCircleLeft","contributed_by","description","ingredients","malt","amount","value","unit","hops","yeast","brewers_tips","food_pairing","pairing","Navbar","active","setActive","handleOnclickBurguer","width","height","aria-expanded","data-target","aria-hidden","App","exact","path","component","Home","FavoriteBeers","BeerDetails","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","document","getElementById","console","log","getState","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.94077710.chunk.js","sourcesContent":["import Axios from 'axios-observable';\r\n\r\nexport interface Volume {\r\n  value: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface BoilVolume {\r\n  value: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface Temp {\r\n  value: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface MashTemp {\r\n  temp: Temp;\r\n  duration?: number;\r\n}\r\n\r\nexport interface Temp2 {\r\n  value: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface Fermentation {\r\n  temp: Temp2;\r\n}\r\n\r\nexport interface Method {\r\n  mash_temp: MashTemp[];\r\n  fermentation: Fermentation;\r\n  twist: string;\r\n}\r\n\r\nexport interface Amount {\r\n  value: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface Malt {\r\n  name: string;\r\n  amount: Amount;\r\n}\r\n\r\nexport interface Amount2 {\r\n  value: number;\r\n  unit: string;\r\n}\r\n\r\nexport interface Hop {\r\n  name: string;\r\n  amount: Amount2;\r\n  add: string;\r\n  attribute: string;\r\n}\r\n\r\nexport interface Ingredients {\r\n  malt: Malt[];\r\n  hops: Hop[];\r\n  yeast: string;\r\n}\r\n\r\nexport type Beer = {\r\n  id: number;\r\n  name: string;\r\n  tagline: string;\r\n  first_brewed: string;\r\n  description: string;\r\n  image_url: string;\r\n  abv: number;\r\n  ibu?: number;\r\n  target_fg: number;\r\n  target_og: number;\r\n  ebc?: number;\r\n  srm?: number;\r\n  ph?: number;\r\n  attenuation_level: number;\r\n  volume: Volume;\r\n  boil_volume: BoilVolume;\r\n  method: Method;\r\n  ingredients: Ingredients;\r\n  food_pairing: string[];\r\n  brewers_tips: string;\r\n  contributed_by: string;\r\n};\r\n\r\ntype BeerFilters = {\r\n  abv_gt?: number;\r\n  abv_lt?: number;\r\n  ibu_gt?: number;\r\n  ibu_lt?: number;\r\n  ebc_gt?: number;\r\n  ebc_lt?: number;\r\n  beer_name?: string;\r\n  yeast?: string;\r\n  brewed_before?: string;\r\n  brewed_after?: string;\r\n  hops?: string;\r\n  malt?: string;\r\n  food?: string;\r\n  ids?: string[];\r\n};\r\n\r\ntype BeerPagination = {\r\n  page?: number;\r\n  per_page?: number;\r\n};\r\n\r\nfunction formatIds(ids: string[]) {\r\n  if (ids.length === 0) {\r\n    return '';\r\n  }\r\n  return ids.reduce((prev, curr) => {\r\n    return `${prev}|${curr}`;\r\n  });\r\n}\r\n\r\nexport function getBeers(filters?: BeerFilters, pagination?: BeerPagination) {\r\n  var ids: string | null = null;\r\n  if (filters && filters.ids) {\r\n    ids = formatIds(filters?.ids || []);\r\n  }\r\n  return Axios.get(`${process.env.REACT_APP_API_URL}/beers`, {\r\n    params: { ...filters, ...pagination, ids },\r\n  });\r\n}\r\n","export const SELECT_BEER = 'beers/selectBeer';\r\nexport const ADD_FAVORITE_BEER = 'beers/addFavoriteBeer';\r\nexport const REMOVE_FAVORITE_BEER = 'beers/removeFavoriteBeer';\r\nexport const NEXT_PAGE = 'beers/nextPage';\r\nexport const PREVIOUS_PAGE = 'beers/previousPage';\r\n\r\nexport function selectBeer(beer: string | null) {\r\n  return {\r\n    type: SELECT_BEER,\r\n    id: beer,\r\n  };\r\n}\r\n\r\nexport function addFavoriteBeer(id: string | null) {\r\n  return {\r\n    type: ADD_FAVORITE_BEER,\r\n    id,\r\n  };\r\n}\r\n\r\nexport function removeFavoriteBeer(id: string | null) {\r\n  return {\r\n    type: REMOVE_FAVORITE_BEER,\r\n    id,\r\n  };\r\n}\r\n\r\nexport function nextPage() {\r\n  return {\r\n    type: NEXT_PAGE,\r\n  };\r\n}\r\n\r\nexport function previousPage() {\r\n  return {\r\n    type: PREVIOUS_PAGE,\r\n  };\r\n}\r\n\r\nexport type BeersState = {\r\n  selectedBeer: string | null;\r\n  favoriteBeers: string[];\r\n  page: number;\r\n};\r\n\r\nconst initialState: BeersState = {\r\n  selectedBeer: null,\r\n  favoriteBeers: [],\r\n  page: 1,\r\n};\r\n\r\nfunction beersReducer(state: any, action: any) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState;\r\n  }\r\n  switch (action.type) {\r\n    case SELECT_BEER:\r\n      return {\r\n        ...state,\r\n        selectedBeer: action.id,\r\n      };\r\n    case ADD_FAVORITE_BEER:\r\n      return {\r\n        ...state,\r\n        favoriteBeers: [...state.favoriteBeers, action.id],\r\n      };\r\n    case REMOVE_FAVORITE_BEER:\r\n      return {\r\n        ...state,\r\n        favoriteBeers: [\r\n          ...state.favoriteBeers.filter((beerId: string) => {\r\n            return action.id !== beerId;\r\n          }),\r\n        ],\r\n      };\r\n    case NEXT_PAGE:\r\n      return { ...state, page: ++state.page };\r\n    case PREVIOUS_PAGE:\r\n      return {\r\n        ...state,\r\n        page: state.page <= 1 ? 1 : --state.page,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default beersReducer;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { faHeart as faHeartReg } from '@fortawesome/free-regular-svg-icons';\r\nimport './BeerCard.component.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype BeerCardProps = {\r\n  id: string;\r\n  name: string;\r\n  tagline: string;\r\n  image_url: string;\r\n  isFavorite?: boolean;\r\n  linkUrl: string;\r\n  onAddToFavorite?: () => void;\r\n  onRemomveToFavorite?: () => void;\r\n};\r\n\r\nfunction BeerCard(props: BeerCardProps) {\r\n  return (\r\n    <div className=\"beer-card card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"media\">\r\n          <div className=\"media-left\">\r\n            <figure className=\"image\">\r\n              <img src={props.image_url} alt={props.name}></img>\r\n            </figure>\r\n          </div>\r\n          <div className=\"media-content\">\r\n            <p className=\"title is-4\">\r\n              <Link\r\n                to={{\r\n                  pathname: props.linkUrl,\r\n                  search: `?id=${props.id}`,\r\n                }}\r\n              >\r\n                {' '}\r\n                {props.name}\r\n              </Link>\r\n            </p>\r\n            <p className=\"subtitle is-6\">{props.tagline}</p>\r\n          </div>\r\n          <div className=\"favorite has-text-danger\">\r\n            <FontAwesomeIcon\r\n              icon={props.isFavorite ? faHeart : faHeartReg}\r\n              size=\"lg\"\r\n              onClick={\r\n                props.isFavorite\r\n                  ? props.onRemomveToFavorite\r\n                  : props.onAddToFavorite\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BeerCard;\r\n","import {\r\n  removeFavoriteBeer,\r\n  addFavoriteBeer,\r\n  BeersState,\r\n} from '../../redux/reducers/Beers.reducer';\r\nimport BeerCard from './BeerCard.component';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state: BeersState, ownProps: any) => {\r\n  const id = ownProps.id;\r\n  return {\r\n    ...ownProps,\r\n    isFavorite: state.favoriteBeers.indexOf(id) >= 0,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any, ownProps: any) => {\r\n  return {\r\n    onAddToFavorite: () => {\r\n      dispatch(addFavoriteBeer(ownProps.id));\r\n    },\r\n    onRemomveToFavorite: () => {\r\n      dispatch(removeFavoriteBeer(ownProps.id));\r\n    },\r\n  };\r\n};\r\n\r\nconst BeerCardRedux = connect(mapStateToProps, mapDispatchToProps)(BeerCard);\r\nexport default BeerCardRedux;\r\n","import React from 'react';\r\nimport { Beer } from '../../services/Beers.service';\r\nimport BeerCardRedux from '../BeerCard/BeerCard.component.redux';\r\n\r\ntype BeerListProps = {\r\n  beers: Beer[];\r\n};\r\nfunction BeersList(props: BeerListProps) {\r\n  return (\r\n    <div className=\"columns is-multiline\">\r\n      {props.beers.map((beer: Beer, index: number) => {\r\n        return (\r\n          <div\r\n            className=\"column is-6-tablet is-4-desktop\"\r\n            key={`beer-${index}`}\r\n          >\r\n            <BeerCardRedux {...beer} linkUrl={'/beer-details'}></BeerCardRedux>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BeersList;\r\n","import React from 'react';\r\nimport './Loader.component.scss';\r\n\r\nfunction Loader() {\r\n  return <div className=\"loader\"></div>;\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\ntype PaginationNavProps = {\r\n  onNextPage: () => void;\r\n  onPreviousPage: () => void;\r\n  currentPage: number;\r\n};\r\n\r\nfunction PaginationNav(props: PaginationNavProps) {\r\n  return (\r\n    <nav\r\n      className=\"pagination is-left\"\r\n      role=\"navigation\"\r\n      aria-label=\"pagination\"\r\n    >\r\n      <div className=\"pagination-list\">\r\n        <div>\r\n          Page: {props.currentPage}\r\n        </div>\r\n      </div>\r\n      <button\r\n        className=\"button pagination-previous\"\r\n        onClick={props.onPreviousPage}\r\n      >\r\n        <span className=\"icon\">\r\n          <FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon>\r\n        </span>\r\n        <span>Previous page</span>\r\n      </button>\r\n      <button className=\"button pagination-next\" onClick={props.onNextPage}>\r\n        <span>Next page</span>\r\n        <span className=\"icon\">\r\n          <FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon>\r\n        </span>\r\n      </button>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default PaginationNav;\r\n","import { connect } from 'react-redux';\r\nimport PaginationNav from './PaginationNav.component';\r\nimport { nextPage, previousPage } from '../../redux/reducers/Beers.reducer';\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    currentPage: state.page,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    onNextPage: () => {\r\n      dispatch(nextPage());\r\n    },\r\n    onPreviousPage: () => {\r\n      dispatch(previousPage());\r\n    },\r\n  };\r\n};\r\n\r\nconst PaginationNavRedux = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PaginationNav);\r\nexport default PaginationNavRedux;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getBeers } from '../../services/Beers.service';\r\nimport { AxiosResponse } from 'axios';\r\nimport BeersList from '../../components/BeersList/BeersList.component';\r\nimport Loader from '../../components/loader/Loader.component';\r\nimport PaginationNavRedux from '../../components/PaginationNav/PaginationNav.component.redux';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Home(props: { currentPage: number }) {\r\n  const [beers, setBeers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const subscription = getBeers(\r\n      {},\r\n      { per_page: 15, page: props.currentPage }\r\n    ).subscribe((response: AxiosResponse) => {\r\n      setBeers(response.data);\r\n      setIsLoading(false);\r\n    });\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [props.currentPage]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"section\">\r\n        <PaginationNavRedux></PaginationNavRedux>\r\n      </div>\r\n      <div className=\"columns is-multiline\">\r\n        {isLoading ? <Loader></Loader> : <BeersList beers={beers}></BeersList>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    currentPage: state.page,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, withRouter } from 'react-router-dom';\r\nimport { getBeers, Beer, Malt, Hop } from '../../services/Beers.service';\r\nimport Loader from '../../components/loader/Loader.component';\r\nimport './BeerDetails.component.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction BeerDetails(props: any) {\r\n  const [beers, setBeer] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const beerId = useQuery().get('id');\r\n\r\n  useEffect(() => {\r\n    if (!beerId) {\r\n      return;\r\n    }\r\n    const subscription = getBeers({ ids: [beerId] }).subscribe((response) => {\r\n      setBeer(response.data);\r\n      setIsLoading(false);\r\n    });\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [beerId]);\r\n\r\n  return (\r\n    <div className=\"beer-details container\">\r\n      {isLoading ? (\r\n        <Loader></Loader>\r\n      ) : (\r\n        <div>\r\n          <div className=\"section\">\r\n            <nav className=\"level is-mobile\">\r\n              <div className=\"level-left\"></div>\r\n              <div className=\"level-right\">\r\n                <div className=\"level-item\">\r\n                  <button\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      props.history.goBack();\r\n                    }}\r\n                  >\r\n                    <span className=\"icon\">\r\n                      <FontAwesomeIcon\r\n                        icon={faArrowAltCircleLeft}\r\n                      ></FontAwesomeIcon>\r\n                    </span>\r\n                    <span>Back</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n\r\n          <div className=\"columns\">\r\n            {beers.map((beer: Beer, index: number) => {\r\n              return (\r\n                <div className=\"column\" key={`beer-${index}`}>\r\n                  <div className=\"content is-medium beer-header\">\r\n                    <div className=\"image\">\r\n                      <img alt={beer.name} src={beer.image_url}></img>\r\n                    </div>\r\n                    <div className=\"text\">\r\n                      <h1 className=\"has-text-weight-bold\">{beer.name}</h1>\r\n                      <p className=\"has-text-weight-semibold\">{beer.tagline}</p>\r\n                      <small>\r\n                        <strong>Contributed by: </strong>\r\n                        {beer.contributed_by}\r\n                      </small>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"content is-medium\">\r\n                    <h3>Description</h3>\r\n                    <p>{beer.description}</p>\r\n                    <h3>Ingredients</h3>\r\n                    Malt:\r\n                    <ul>\r\n                      {beer.ingredients.malt.map((malt: Malt, index) => {\r\n                        return (\r\n                          <li\r\n                            key={`malt-${index}`}\r\n                          >{`${malt.name} - ${malt.amount.value}: ${malt.amount.unit}`}</li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                    Hop:\r\n                    <ul>\r\n                      {beer.ingredients.hops.map((malt: Hop, index) => {\r\n                        return (\r\n                          <li\r\n                            key={`Hop-${index}`}\r\n                          >{`${malt.name} - ${malt.amount.value}: ${malt.amount.unit}`}</li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                    <p>{beer.ingredients.yeast}</p>\r\n                    <h3>Tips for brewers</h3>\r\n                    <p>{beer.brewers_tips}</p>\r\n                    <h3>Food pairing</h3>\r\n                    <ul>\r\n                      {beer.food_pairing.map((pairing: string, index) => {\r\n                        return <li key={`pairing-${index}`}>{pairing}</li>;\r\n                      })}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(BeerDetails);\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Navbar() {\r\n  const [active, setActive] = useState(false);\r\n  const handleOnclickBurguer = () => {\r\n    setActive(!active);\r\n  };\r\n  return (\r\n    <nav\r\n      className=\"navbar is-fixed-top is-light\"\r\n      role=\"navigation\"\r\n      aria-label=\"main navigation\"\r\n    >\r\n      <div className=\"navbar-brand\">\r\n        <Link className=\"navbar-item\" to=\"/\">\r\n          <img\r\n            src=\"https://bulma.io/images/bulma-logo.png\"\r\n            width={112}\r\n            height={28}\r\n            alt=\"bulma\"\r\n          />\r\n        </Link>\r\n        <a\r\n          className=\"navbar-burger burger\"\r\n          aria-label=\"menu\"\r\n          aria-expanded=\"false\"\r\n          data-target=\"navbarBasicExample\"\r\n          onClick={handleOnclickBurguer}\r\n        >\r\n          <span aria-hidden=\"true\" />\r\n          <span aria-hidden=\"true\" />\r\n          <span aria-hidden=\"true\" />\r\n        </a>\r\n      </div>\r\n      <div\r\n        id=\"navbarBasicExample\"\r\n        className={`navbar-menu ${active ? 'is-active' : ''}`}\r\n      >\r\n        <div className=\"navbar-start\" onClick={handleOnclickBurguer}>\r\n          <Link to=\"/\" className=\"navbar-item\">\r\n            Home\r\n          </Link>\r\n          <Link to=\"/favorite-beers\" className=\"navbar-item\">\r\n            Favorite Beers\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getBeers } from '../../services/Beers.service';\r\nimport BeersList from '../../components/BeersList/BeersList.component';\r\nimport Loader from '../../components/loader/Loader.component';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\r\n\r\nfunction FavoriteBeers(props: any) {\r\n  const [beers, setBeers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const subscription = getBeers({ ids: props.favoriteBeers }).subscribe(\r\n      (response) => {\r\n        setBeers(response.data);\r\n        setIsLoading(false);\r\n      }\r\n    );\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [props.favoriteBeers]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"section\">\r\n        <nav className=\"level is-mobile\">\r\n          <div className=\"level-left\"></div>\r\n          <div className=\"level-right\">\r\n            <div className=\"level-item\">\r\n              <button\r\n                className=\"button\"\r\n                onClick={() => {\r\n                  props.history.goBack();\r\n                }}\r\n              >\r\n                <span className=\"icon\">\r\n                  <FontAwesomeIcon\r\n                    icon={faArrowAltCircleLeft}\r\n                  ></FontAwesomeIcon>\r\n                </span>\r\n                <span>Back</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n      {props.favoriteBeers.length === 0 ? (\r\n        <div className=\"content has-text-centered\">\r\n          <h2>No favorite beers selected!</h2>\r\n        </div>\r\n      ) : isLoading ? (\r\n        <Loader></Loader>\r\n      ) : (\r\n        <BeersList beers={beers}></BeersList>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    favoriteBeers: state.favoriteBeers,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withRouter(FavoriteBeers));\r\n","import React from 'react';\nimport './App.scss';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './routes/home/Home.component';\nimport BeerDetails from './routes/beer-details/BeerDetails.component';\nimport Navbar from './components/Navbar/Navbar.component';\nimport FavoriteBeers from './routes/favorite-beers/FavoriteBeers.component';\n\nfunction App() {\n  return (\n    <div className=\"App \">\n      <HashRouter>\n        <Navbar></Navbar>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/favorite-beers\" component={FavoriteBeers} />\n        <Route exact path=\"/beer-details\" component={BeerDetails} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore } from 'redux';\r\nimport beersReducer from './reducers/Beers.reducer';\r\n\r\nconst store = createStore(beersReducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}